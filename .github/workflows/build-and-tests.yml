name: build-and-test

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

on: [pull_request]

jobs:
  build-and-test-build-job:
    runs-on: ubuntu-latest
    steps:
    - name: Remove unnecessary files
      run: |
        df . -h
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df . -h

    - uses: actions/checkout@v4
      with:
        github-server-url: https://github.com/dogusyuksel/stm32f1-master-example.git
        lfs: true

    - name: clone docker
      run: |
        git clone https://github.com/dogusyuksel/embedded_docker.git thirdparty/docker

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Project Docker
      uses: docker/build-push-action@v5
      with:
        load: true
        tags: |
          ${{ secrets.DOCKER_REPO }}:master
        context: .
        file: thirdparty/docker/Dockerfile
        pull: true
        push: false
        provenance: false

    - name: Bootloader Build Check
      run: |
        ./thirdparty/docker/run_docker.sh ${{ secrets.DOCKER_REPO }}:master "cd /workspace/bootloader_firmware && ./build.sh"

    - name: Bootloader Test Check
      run: |
        ./thirdparty/docker/run_docker.sh ${{ secrets.DOCKER_REPO }}:master "cd /workspace/bootloader_firmware && ceedling clean && ceedling test:all"

    - name: Bootloader Tool Build
      run: |
        ./thirdparty/docker/run_docker.sh ${{ secrets.DOCKER_REPO }}:master "cd /workspace/bootloader_tool && make"

    - name: Application Env
      run: |
        ./thirdparty/docker/run_docker.sh ${{ secrets.DOCKER_REPO }}:master "cd /workspace && patch -d . -p0 < ./patches/transport.py.patch && patch -d . -p0 < ./patches/canard_stm32.patch"

    - name: Application Build Check
      run: |
        ./thirdparty/docker/run_docker.sh ${{ secrets.DOCKER_REPO }}:master "cd /workspace/application_firmware && ./build.sh"

    - name: Application Tool Build
      run: |
        ./thirdparty/docker/run_docker.sh ${{ secrets.DOCKER_REPO }}:master "cd /workspace/application_tool && ./build.sh"

    - name: Bootloader Copy to RAM Build
      run: |
        ./thirdparty/docker/run_docker.sh ${{ secrets.DOCKER_REPO }}:master "cd /workspace/bootloader_copy_to_ram && ./build.sh"

    - name: Application Run from RAM Build
      run: |
        ./thirdparty/docker/run_docker.sh ${{ secrets.DOCKER_REPO }}:master "cd /workspace/application_boot_from_ram && ./build.sh"
